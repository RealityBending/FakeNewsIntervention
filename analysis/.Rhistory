df
setwd("C:/Users/Rob/OneDrive/Rob/PhD/Github/FakeNewsIntervention/analysis")
#| message: false
#| warning: false
library(tidyverse)
library(easystats)
library(patchwork)
library(ggside)
library(modelsummary)
#| code-fold: false
df <- read.csv("../data/rawdata_participants.csv") |>
mutate(Political_Affiliation = fct_relevel(Political_Affiliation, "Green", "Labour", "Democrat", "None", "None or Independent", "Liberal-Democrats", "Conservative", "Republican"),
Political_Ideology = fct_relevel(Political_Ideology, "Extremely Liberal", "Liberal", "Slightly Liberal", "Moderate", "Don't Know", "Slightly Conservative", "Conservative", "Extremely Conservative"))
dfmist <- read.csv("../data/rawdata_mist.csv")
colors_party <- c("Democrat" = "blue", "Republican" = "red", "Labour" = "red", "Conservative" = "blue", "Green" = "green", "None or Independent" = "grey")
View(df)
View(df)
unique(df$FakeNews_SubjectiveDiscrimination)
df <- df |>
mutate(FakeNews_SubjectiveDiscrimination = case_when(
FakeNews_SubjectiveDiscrimination == "Unsure/Refuse to answer" ~ NA,
FakeNews_SubjectiveDiscrimination == "very unlikely" ~ -2,
FakeNews_SubjectiveDiscrimination == "unlikely" ~ -1,
FakeNews_SubjectiveDiscrimination == "likely" ~ 1,
FakeNews_SubjectiveDiscrimination == "very likely" ~ 2,
.default = 10
))
table(df$FakeNews_SubjectiveDiscrimination) / nrow(df)
df |>
filter(!is.na(FakeNews_SubjectiveDiscrimination)) |>
mutate(FakeNews_SubjectiveDiscrimination = as.factor(FakeNews_SubjectiveDiscrimination)) |>
ggplot(aes(x = FakeNews_SubjectiveDiscrimination, fill = FakeNews_SubjectiveDiscrimination)) +
geom_bar() +
scale_fill_viridis_d(guide = "none") +
theme_minimal() +
facet_wrap(~Intervention)
df$Initial_SubjectiveDiscrimination <- ifelse(df$FakeNews_SubjectiveDiscrimination > 0, 1, 0)
model <- lm(FakeNews_SubjectiveDiscrimination ~ Political_Ideology, data = df)
summary(model)
ggplot(df, aes(x = Political_Ideology, y = FakeNews_SubjectiveDiscrimination, color = Intervention)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
ggplot(df, aes(x = Political_Ideology, y = FakeNews_SubjectiveDiscrimination)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
theme_minimal()
modelplot(model)
model <- lm(FakeNews_SubjectiveDiscrimination ~ Political_Ideology * Intervention, data = df)
summary(model)
ggplot(df, aes(x = Political_Ideology, y = FakeNews_SubjectiveDiscrimination, color = Intervention)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = TRUE) +
facet_wrap(~ Intervention) + # Separate plots for each Intervention group
theme_minimal() +
labs(title = "Effect of Political Ideology on Fake News Beliefs by Intervention")
ggplot(aes(x = FakeNews_SubjectiveDiscrimination, fill = FakeNews_SubjectiveDiscrimination)) +
geom_bar() +
scale_fill_viridis_d(guide = "none") +
theme_minimal() +
facet_wrap(~Intervention)
ggplot(df, aes(x = FakeNews_SubjectiveDiscrimination, fill = FakeNews_SubjectiveDiscrimination)) +
geom_bar() +
scale_fill_viridis_d(guide = "none") +
theme_minimal() +
facet_wrap(~Intervention)
df |>
filter(!is.na(FakeNews_SubjectiveDiscrimination)) |>
mutate(FakeNews_SubjectiveDiscrimination = as.factor(FakeNews_SubjectiveDiscrimination)) |>
ggplot(aes(x = FakeNews_SubjectiveDiscrimination, fill = FakeNews_SubjectiveDiscrimination)) +
geom_bar() +
scale_fill_viridis_d(guide = "none") +
theme_minimal() +
facet_wrap(~Intervention)
#| message: false
#| warning: false
library(tidyverse)
library(easystats)
library(patchwork)
library(ggside)
library(glmmTMB)
easystats::install_latest()
#| message: false
#| warning: false
library(tidyverse)
library(easystats)
library(patchwork)
library(ggside)
library(glmmTMB)
#| code-fold: false
df <- read.csv("../data/data_participants.csv") |>
mutate(
# Political_Affiliation = fct_relevel(Political_Affiliation, "Green", "Labour", "Democrat", "None", "None or Independent", "Liberal-Democrats", "Conservative", "Republican"),
Political_Ideology = fct_relevel(Political_Ideology, "Extremely Liberal", "Liberal", "Slightly Liberal", "Moderate", "Don't Know", "Slightly Conservative", "Conservative", "Extremely Conservative"))
dfmist <- read.csv("../data/data_mist.csv") |>
mutate(Condition = ifelse(Condition == "Pretest", "Pre-test", "Post-test"),
Condition = fct_relevel(Condition, "Pre-test", "Post-test"),
Intervention = ifelse(Intervention == "Tetris", "Tetris", "Bad News"),
Intervention = fct_relevel(Intervention, "Bad News", "Tetris"),
Topic = ifelse(Topic == "Covid", "Covid items", "General items"),
Topic = fct_relevel(Topic, "General items", "Covid items"),
Belief = ifelse(Realness > 0.5, 0, 1),
Fakeness = 1 - Realness,
Confidence = abs(datawizard::rescale(Fakeness, to = c(-1, 1), range = c(0, 1)))) |>
full_join(select(df, Participant, Sample, Intervention_Valid, Political_IdeologyNumeric, starts_with("BFI"), starts_with("GCBS"), starts_with("VSA"), COVID_Vaccination, FakeNews_SubjectiveDiscrimination, Intervention_SubjectiveEffect), by = "Participant") |>
filter(Sample == "USA")
dfmocri <- read.csv("../data/data_mocri.csv") |>
full_join(select(df, Participant, Sample, Intervention, Intervention_Valid, Political_IdeologyNumeric, starts_with("BFI"), starts_with("GCBS"), starts_with("VSA"), COVID_Vaccination, FakeNews_SubjectiveDiscrimination, Intervention_SubjectiveEffect), by = "Participant") |>
mutate(Condition = fct_relevel(Condition, "Pre-test", "Post-test"),
Intervention = ifelse(Intervention == "Tetris", "Tetris", "Bad News"),
Intervention = fct_relevel(Intervention, "Bad News", "Tetris")) |>
filter(Sample == "USA")
#| code-fold: false
m1 <- glmmTMB(
Belief ~ Intervention_SubjectiveEffect * Intervention * Condition * Nature * Topic + (Condition * Nature|Participant) + (1|Item ),
data = dfmist[dfmist$Intervention_Valid == TRUE, ],
family = "binomial"
)
c <- estimate_contrasts(m1, contrast="Condition", by=c("Intervention_SubjectiveEffect", "Topic", "Nature", "Intervention"), p_adjust="holm")
#| code-fold: false
m1 <- glmmTMB(
Belief ~ Intervention_SubjectiveEffect * Intervention * Condition * Nature * Topic + (Condition * Nature|Participant) + (1|Item ),
data = dfmist[dfmist$Intervention_Valid == TRUE, ],
family = "binomial"
)
c <- estimate_contrasts(m1, contrast="Condition", by=c("Intervention_SubjectiveEffect", "Topic", "Nature", "Intervention"), p_adjust="holm")
make_covariatemodel <- function(covariate="Political_IdeologyNumeric") {
# MIST ---------------------------------------------------------------------
f <- paste0("Belief ~ Nature / poly(",
covariate,
", 2) * Topic + (Nature|Participant) + (1|Item)")
m <- glmmTMB(
as.formula(f),
data = dfmist[!is.na(dfmist[[covariate]]) & dfmist$Condition == "Pre-test",],
family = "binomial"
)
# m <- glmmTMB(
#   Fakeness ~ Nature / poly(Political_IdeologyNumeric, 2) * Topic + (Nature|Participant) + (1|Item ),
#   data = filter(dfmist, Condition == "Pre-test", !is.na(Political_IdeologyNumeric)),
#   family = ordbeta()
# )
# parameters::parameters(m)
pred <- estimate_relation(m, by=c("Nature", covariate, "Topic"), length = 20)
pred$x <- pred[[covariate]]
pred$Topic <- paste0("MIST (", pred$Topic, ")")
# Benchmark
trends1 <- estimate_slopes(m, trend=covariate, by=c(covariate, "Nature", "Topic"), length=5, backend = "emmeans")
# Confidence ----------------------------------------------------------------
f <- paste0("Confidence ~ Nature / poly(",
covariate,
", 2) * Topic + (Nature|Participant) + (1|Item)")
m <- glmmTMB(
as.formula(f),
data = dfmist[!is.na(dfmist[[covariate]]) & dfmist$Condition == "Pre-test" & dfmist$Correct == 1,],
family = ordbeta()
)
pred2 <- estimate_relation(m, by=c("Nature", covariate, "Topic"), length = 20)
pred2$x <- pred2[[covariate]]
pred2$Topic <- paste0("MIST (", pred2$Topic, ")")
p_conf <- pred2 |>
ggplot(aes(x=x, y=Predicted)) +
geom_ribbon(aes(ymin=CI_low, ymax=CI_high, fill=Nature), alpha=0.3) +
geom_line(aes(color=Nature)) +
scale_color_manual(values=c("Fake"="#F44336", "Real"="#4CAF50", "Manipulative"="#F44336", "NonManipulative"="#4CAF50"),
breaks = c("Fake", "Real"),
labels = c("Fake / Manipulative", "Real / Non-Manipulative")) +
scale_fill_manual(values=c("Fake"="#F44336", "Real"="#4CAF50", "Manipulative"="#F44336", "NonManipulative"="#4CAF50"),
breaks = c("Fake", "Real"),
labels = c("Fake / Manipulative", "Real / Non-Manipulative")) +
scale_y_continuous(labels=scales::percent) +
theme_minimal() +
facet_wrap(~Topic) +
labs(x = covariate, y="Correct Responses - Confidence") +
theme(strip.background = element_rect(fill="lightgrey", color="white"),
axis.title.x = element_text(face="bold"))
trends_conf <- estimate_slopes(m, trend=covariate, by=c(covariate, "Nature", "Topic"), length=5, backend="emmeans") |>
select(-SE, -z, -df_error) |>
insight::format_table() |>
gt::gt() |>
gt::data_color(columns = "Nature", palette = c("#F44336", "#4CAF50")) |>
gt::data_color(columns = covariate, palette = c("lightblue", "blue")) |>
gt::data_color(columns = "p", fn = function(x) ifelse(x < .01, "orange", ifelse(x < .05, "gold", "white")))
# MOCRI --------------------------------------------------------------------
f <- paste0("Manipulative ~ Nature / poly(",
covariate,
", 2) + (Nature|Participant) + (1|Item)")
m <- glmmTMB(
as.formula(f),
data = dfmocri[!is.na(dfmocri[[covariate]]) & dfmocri$Condition == "Pre-test",],
family = "binomial"
)
pred3 <- estimate_relation(m, by=c("Nature", covariate), length = 20)
pred3$x <- pred3[[covariate]]
pred3$Topic <- "MOCRI"
p <- rbind(pred, pred3) |>
ggplot(aes(x=x, y=Predicted)) +
geom_ribbon(aes(ymin=CI_low, ymax=CI_high, fill=Nature), alpha=0.3) +
geom_line(aes(color=Nature)) +
scale_color_manual(values=c("Fake"="#F44336", "Real"="#4CAF50", "Manipulative"="#F44336", "NonManipulative"="#4CAF50"),
breaks = c("Fake", "Real"),
labels = c("Fake / Manipulative", "Real / Non-Manipulative")) +
scale_fill_manual(values=c("Fake"="#F44336", "Real"="#4CAF50", "Manipulative"="#F44336", "NonManipulative"="#4CAF50"),
breaks = c("Fake", "Real"),
labels = c("Fake / Manipulative", "Real / Non-Manipulative")) +
scale_y_continuous(labels=scales::percent) +
theme_minimal() +
facet_wrap(~Topic) +
labs(x = covariate, y = "Probability of Believing an Item Fake/Manipulative") +
theme(strip.background = element_rect(fill="lightgrey", color="white"),
axis.title.x = element_text(face="bold"))
trends2 <- estimate_slopes(m, trend=covariate, by=c(covariate, "Nature"), length=5, backend="emmeans")
trends2$Topic <- "MOCRI"
trends <- rbind(trends1, trends2) |>
select(-SE, -z, -df_error) |>
insight::format_table() |>
gt::gt() |>
gt::data_color(columns = "Nature", palette = c("#F44336", "#4CAF50")) |>
gt::data_color(columns = covariate, palette = c("lightblue", "blue")) |>
gt::data_color(columns = "p", fn = function(x) ifelse(x < .01, "orange", ifelse(x < .05, "gold", "white")))
list(p=p, trends=trends, p_conf = p_conf, trends_conf=trends_conf)
}
rez_ideology <- make_covariatemodel(covariate="Political_IdeologyNumeric")
rez_ideology$p
rez_ideology$trends
rez_ideology$p_conf
rez_ideology$trends_conf
rez_gcbs2 <- make_covariatemodel(covariate="FakeNews_SubjectiveDiscrimination")
rez_gcbs2 <- make_covariatemodel(covariate="Initial_SubjectiveDiscrimination")
write.csv(df, "../data/data_participants.csv", row.names = FALSE)
write.csv(dfmist, "../data/data_mist.csv", row.names = FALSE)
write.csv(mocri, "../data/data_mocri.csv", row.names = FALSE)
write.csv(df, "../data/data_participants.csv", row.names = FALSE)
write.csv(dfmist, "../data/data_mist.csv", row.names = FALSE)
write.csv(dfmocri, "../data/data_mocri.csv", row.names = FALSE)
#| message: false
#| warning: false
library(tidyverse)
library(easystats)
library(patchwork)
library(ggside)
library(glmmTMB)
#| code-fold: false
df <- read.csv("../data/data_participants.csv") |>
mutate(
# Political_Affiliation = fct_relevel(Political_Affiliation, "Green", "Labour", "Democrat", "None", "None or Independent", "Liberal-Democrats", "Conservative", "Republican"),
Political_Ideology = fct_relevel(Political_Ideology, "Extremely Liberal", "Liberal", "Slightly Liberal", "Moderate", "Don't Know", "Slightly Conservative", "Conservative", "Extremely Conservative"))
dfmist <- read.csv("../data/data_mist.csv") |>
mutate(Condition = ifelse(Condition == "Pretest", "Pre-test", "Post-test"),
Condition = fct_relevel(Condition, "Pre-test", "Post-test"),
Intervention = ifelse(Intervention == "Tetris", "Tetris", "Bad News"),
Intervention = fct_relevel(Intervention, "Bad News", "Tetris"),
Topic = ifelse(Topic == "Covid", "Covid items", "General items"),
Topic = fct_relevel(Topic, "General items", "Covid items"),
Belief = ifelse(Realness > 0.5, 0, 1),
Fakeness = 1 - Realness,
Confidence = abs(datawizard::rescale(Fakeness, to = c(-1, 1), range = c(0, 1)))) |>
full_join(select(df, Participant, Sample, Intervention_Valid, Political_IdeologyNumeric, starts_with("BFI"), starts_with("GCBS"), starts_with("VSA"), COVID_Vaccination, FakeNews_SubjectiveDiscrimination, Intervention_SubjectiveEffect), by = "Participant") |>
filter(Sample == "USA")
rez_gcbs2 <- make_covariatemodel(covariate="Initial_SubjectiveDiscrimination")
#| code-fold: false
df <- read.csv("../data/data_participants.csv") |>
mutate(
# Political_Affiliation = fct_relevel(Political_Affiliation, "Green", "Labour", "Democrat", "None", "None or Independent", "Liberal-Democrats", "Conservative", "Republican"),
Political_Ideology = fct_relevel(Political_Ideology, "Extremely Liberal", "Liberal", "Slightly Liberal", "Moderate", "Don't Know", "Slightly Conservative", "Conservative", "Extremely Conservative"))
dfmist <- read.csv("../data/data_mist.csv") |>
mutate(Condition = ifelse(Condition == "Pretest", "Pre-test", "Post-test"),
Condition = fct_relevel(Condition, "Pre-test", "Post-test"),
Intervention = ifelse(Intervention == "Tetris", "Tetris", "Bad News"),
Intervention = fct_relevel(Intervention, "Bad News", "Tetris"),
Topic = ifelse(Topic == "Covid", "Covid items", "General items"),
Topic = fct_relevel(Topic, "General items", "Covid items"),
Belief = ifelse(Realness > 0.5, 0, 1),
Fakeness = 1 - Realness,
Confidence = abs(datawizard::rescale(Fakeness, to = c(-1, 1), range = c(0, 1)))) |>
full_join(select(df, Participant, Sample, Intervention_Valid, Political_IdeologyNumeric, starts_with("BFI"), starts_with("GCBS"), starts_with("VSA"), COVID_Vaccination, FakeNews_SubjectiveDiscrimination, Intervention_SubjectiveEffect), by = "Participant") |>
filter(Sample == "USA")
remotes::install_github("easystats/easystats")
remotes::install_github("easystats/easystats")
